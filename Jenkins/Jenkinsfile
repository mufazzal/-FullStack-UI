pipeline {
    agent any
    tools {nodejs "nodejs"}
    environment {
        finalArtifactName = "$GIT_BRANCH.$GIT_COMMIT.$BUILD_ID" + ".stage.7z" //.zip
        dockerHubRepo = "mufazzal/full-stack-front-end"
    }
    stages {

        stage('Versioning') {
            steps {
                bat 'SET'
            }
        }       

        stage('Installing') {
            steps {
                echo 'Installation in progress..'
                bat 'npm install'
                echo 'Installation Finished'
            }
        }     

        stage('Lint') {
            steps {
                echo 'Linting in progress..'
                bat 'npm run lint'
                echo 'Linting Finished'
            }
        }    

        stage('Compiling') {
            steps {
                echo 'Compiling in progress..'
                bat "npm run compile"
                echo 'Compiling Finished'
            }
        }

        stage('Test') {
            steps {
                echo 'Testing in progress..'
                bat 'npm run test'
                echo 'Testing Finished'
            }
        }

        stage('Build:stage') {
            steps {
                echo 'Building:stage in progress..'
                //bat 'npm run preBuild:stage'
                bat "npm run build:stage"
                //bat 'npm run postBuild:stage'
                echo 'Building:stage Finished'
            }
        }

        stage('Build:prod') {
            steps {
                echo 'Building:prod in progress..'
                //bat 'npm run preBuild:prod'
                bat "npm run build:prod"
                //bat 'npm run postBuild:prod'                
                echo 'Building:prod Finished'
            }
        }

//zip -r -qq ${finalArtifactName} dist/${build_mode}
        stage('Archiving') {
            steps {
                echo 'Archiving stage build in progress..'
                bat """
                7z a ${finalArtifactName} ./dist/stage/*
                cd ..
                """
                echo 'Archiving stage Finished'

                echo 'Archiving prod build in progress..'
                bat """
                7z a ${finalArtifactName} ./dist/prod/*
                cd ..
                """
                echo 'Archiving prod Finished'                
            }
        }        

        stage('Dockerizing') {
            steps {
                script {
                    echo "Building docker image"
                    
                    //def customImage = docker.build("my-image:${env.BUILD_ID}", "./Docker") 

                    sh """
                        docker build \
                            -f Docker/Dockerfile \
                            -t $dockerHubRepo:$GIT_BRANCH-latest \
                            -t $dockerHubRepo:$GIT_BRANCH-$BUILD_ID \
                            -t $dockerHubRepo:$GIT_BRANCH-$GIT_COMMIT \
                            .
                    """
                    echo "Building docker image finish"
                    echo "Images build locally :-"
                    sh """
                        docker images
                    """
                }
            }
        } 

        stage('DockerHub Push') {
            steps {

                withCredentials([usernamePassword(credentialsId: "$dockerHubCredId", usernameVariable: 'USERNAME_DOCKER_HUB', passwordVariable: 'PASSWORD_DOCKER_HUB')]) {
                    sh """

                        docker login --username $USERNAME_DOCKER_HUB --password $PASSWORD_DOCKER_HUB

                        docker push $dockerHubRepo:$GIT_BRANCH-latest
                        docker push $dockerHubRepo:$GIT_BRANCH-$BUILD_ID
                        docker push $dockerHubRepo:$GIT_BRANCH-$GIT_COMMIT
                    
                    """
                
                }
            }
        }        

        stage('Clean up') {
            steps {
                sh """
                    docker rmi $dockerHubRepo:$GIT_BRANCH-latest
                    docker rmi $dockerHubRepo:$GIT_BRANCH-$BUILD_ID
                    docker rmi $dockerHubRepo:$GIT_BRANCH-$GIT_COMMIT
                """
            }
        }   

    }
}
